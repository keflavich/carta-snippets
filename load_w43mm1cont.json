{
    "$schema": "https://cartavis.github.io/schemas/snippet_schema_1.json",
    "categories": [
        "dataloaders"
    ],
    "code": "// 03. Loading images\n\n// CARTA functions and objects can be accessed via the top-level \"app\" object\n// (or the \"carta\" alias).\n//carta.showSplashScreen();\n//await carta.delay(1000);\n//app.hideSplashScreen();\n\n// Images in the frontend are referred to as frames. Each frame is represented\n// by a FrameStore object, accessible via the array \"frames\". The currently\n// active frame is accessible at \"activeFrame\".\nconsole.log(app.frames);\nconsole.log(app.activeFrame);\n\n// \"openFile\" takes up to three arguments: directory, filename and HDU\n// If no HDU is provided, the first HDU is provided. The directory and filename can\n// also be combined into a single argument. \"openFile\" must be called with \"await\",\n// as it is an asynchronous function that requires communicating with the backend.\n//await app.openFile(\"test_directory\", \"testfile.fits\", \"0\");\n//await app.openFile(\"test_directory\", \"testfile.fits\");\nawait app.openFile(\"//ALMA_IMF/2017.1.01355.L/imaging_results/W43-MM1_B6_uid___A002_X996c88_X87_continuum_merged_bsens_12M_noco_robust0_preselfcal.image.tt0\");\nawait app.appendFile(\"//ALMA_IMF/2017.1.01355.L/imaging_results/W43-MM1_B6_uid___A002_X996c88_X87_continuum_merged_bsens_12M_robust0_preselfcal.image.tt0\");\nawait app.appendFile(\"//ALMA_IMF/2017.1.01355.L/imaging_results/W43-MM1_B6_uid___A002_X996c88_X87_continuum_merged_12M_robust0_preselfcal.image.tt0\");\nawait app.appendFile(\"//ALMA_IMF/2017.1.01355.L/imaging_results/W43-MM1_B6_uid___A002_X996c88_X87_continuum_merged_12M_robust0_selfcal4_finaliter.image.tt0\");\nawait app.appendFile(\"//ALMA_IMF/2017.1.01355.L/imaging_results/W43-MM1_B6_uid___A002_X996c88_X87_continuum_merged_bsens_12M_robust0_selfcal4_finaliter.image.tt0\");\nawait app.appendFile(\"//ALMA_IMF/2017.1.01355.L/imaging_results/W43-MM1_B6_uid___A002_X996c88_X87_continuum_merged_bsens_12M_noco_robust0_selfcal4_finaliter.image.tt0\");\n\n\n\n\n// Additional images can be appended using \"appendFile\". The arguments are the\n// same as \"openFile\".\n//const file1 = await app.openFile(\"testfile1.fits\");\n//const file2 = await app.appendFile(\"testfile2.fits\");\n//const file3 = await app.appendFile(\"testfile3.fits\");\n\n// The active image can be changed with \"setActiveImage\", as well as the wrapper\n// functions \"setActiveImageById\" and \"setActiveImageByIndex\".\n//app.setActiveFrameByIndex(0);\n//app.setActiveFrameById(file2.frameInfo.fileId);\n//app.setActiveFrame(file3);\n\n// \"closeCurrentFile\" closes the active image.\n//app.closeCurrentFile();\n\n// \"closeFile\" takes an optional argument controlling whether user confirmation is\n// required if other images are matched to the given file. This defaults to true.\n// \"await\" is required to delay execution until the user confirms.\n//await app.closeFile(file1);\n\n// \"closeOtherFiles\" closes all images other than the given file.\n//app.closeOtherFiles(file2);",
    "frontendVersion": "3.0.0-beta.1b",
    "snippetVersion": 1
}